package me.flyingtaco725.tempDeathBanner;

import me.flyingtaco725.tempDeathBanner.CommandHandlers.TdbCommandHandler;
import me.flyingtaco725.tempDeathBanner.EventHandlers.PlayerDeathHandler;
import me.flyingtaco725.tempDeathBanner.EventHandlers.PlayerJoinHandler;
import me.flyingtaco725.tempDeathBanner.ListUtility.BanManager;
import me.flyingtaco725.tempDeathBanner.PlayerInfo.PlayerInfo;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.plugin.java.JavaPlugin;
import java.io.*;
import java.util.*;

public final class tempDeathBanner extends JavaPlugin {

    /*
        banManagementList is the list which tracks all player deaths and their penalties
        banManager will be the class which houses functions to manipulate the banManagementList
        playerDataFile is the file location where the list will be saved
    */
    public List<PlayerInfo> banManagementList = new ArrayList<>();
    public BanManager banManager = new BanManager();
    public File playerDataFile = new File(getDataFolder(), "player_data.json");

    /*
        the variables beneath this are configuration variables, they can be set by the user via
        the config.yml file generated by the plugin
     */
    public boolean incOrMultiply;
    public int incrementByXMilliseconds;
    public int initialBanLength;
    public int multiplier;
    public String messageContainer;
    public String graceMessageContainer;
    public String banLengthContainer;
    public int graceLives;
    public int maximumBanLength;
    public String scoreboardTitle;
    public Boolean permanentDeathBoard;

    // this is the class to handle commands
    public TdbCommandHandler commandHandler;


    @Override
    public void onEnable() {
        // create config or save it
        saveDefaultConfig();

        // initialize event handlers and command handlers
        getServer().getPluginManager().registerEvents(new PlayerJoinHandler(this), this);
        getServer().getPluginManager().registerEvents(new PlayerDeathHandler(this), this);

        // initialize command handler
        commandHandler = new TdbCommandHandler(this);
        getCommand("tdb").setExecutor(this);

        // get configuration variable values from config.yml folder
        incOrMultiply = getConfig().getBoolean("incOrMultiply");
        incrementByXMilliseconds = getConfig().getInt("incrementByXMilliseconds");
        initialBanLength = getConfig().getInt("initialBanLength");
        multiplier = getConfig().getInt("multiplier");
        messageContainer = getConfig().getString("messageContainer");
        graceMessageContainer = getConfig().getString("graceMessageContainer");
        banLengthContainer = getConfig().getString("banLengthContainer");
        graceLives = getConfig().getInt("graceLives");
        maximumBanLength = getConfig().getInt("maximumBanLength");
        scoreboardTitle = getConfig().getString("scoreboardTitle");
        permanentDeathBoard = getConfig().getBoolean("permanentDeathBoard");

        // pull persistent json file into banManagementList
        banManagementList = banManager.loadList(playerDataFile);

    }

    @Override
    public void onDisable() {
        banManager.saveList(playerDataFile, banManagementList);
    }

    @Override
    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
        // Call the command handler to process the command logic
        return commandHandler.handleCommand(sender, command, label, args);
    }
}
